import s from './Main.module.scss'
import Navigation from '@/components/Navigation/Navigation'
import Button from '@/components/Button/Button'
import { useNavigate } from 'react-router-dom'
import { AppPath } from '@/types/AppPath'
import { setGameCols } from '@/store/features/gameSlice'
import { useDispatch } from 'react-redux'
import { ChangeEventHandler, useState } from 'react'

const Main = () => {
  const navigate = useNavigate()
  const dispatch = useDispatch()

  const [selectedValue, setSelectedValue] = useState<null | string>(null)

  const handleRadioChange: ChangeEventHandler<HTMLInputElement> = event => {
    const selectedValue = event.target.id // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 'easy', 'hard' –∏–ª–∏ 'veryHard'
    let cols = 4 // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    setSelectedValue(selectedValue)

    if (selectedValue === 'easy') {
      cols = 4
    } else if (selectedValue === 'hard') {
      cols = 6
    } else if (selectedValue === 'veryHard') {
      cols = 10
    }

    // –í—ã–∑—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è gameCols –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ Redux
    dispatch(setGameCols(cols))

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ Local Storage
    localStorage.setItem('gameCols', cols.toString())
  }

  const handlePlayClick = () => {
    navigate(AppPath.GAME)
  }

  return (
    <div className={s.wrapper}>
      <Navigation />
      <div className={s.content}>
        <div className={s.contentWrapper}>
          <div className={s.textWrapper}>
            <h1 className={s.mainTitle}>
              –ò–ì–†–ê MEMORY: <br /> –ó–∞–ø–æ–º–Ω–∏ —Å–≤–æ–π —Å—Ç–µ–∫
            </h1>
            <p className={s.subtitle}>
              –£–∑–Ω–∞–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏ —Å–æ—á–µ—Ç–∞—Ç—å –ø–∞—Ä—ã!
            </p>
            <ol>
              <li className={s.li}>
                <h2>–¶–µ–ª—å –∏–≥—Ä—ã:</h2>
                üîé –ù–∞–π—Ç–∏ –≤—Å–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–∞—Ä—ã –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ.
              </li>
              <li className={s.li}>
                <h2>–•–æ–¥ –∏–≥—Ä—ã:</h2>
                üü¶ –ò–≥—Ä–æ–∫ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–≤–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥.
                <br />‚úÖ –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ–Ω–∏
                –æ—Å—Ç–∞—é—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º–∏.
                <br />‚ùå –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –æ–Ω–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è.
              </li>
            </ol>
          </div>
          <div className={s.levelWrapper}>
            <h2 className={s.pickLevelTitle}>–í—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å:</h2>
            <ul className={s.levels}>
              <li className={s.level}>
                <input
                  id="easy"
                  name="levels"
                  type="radio"
                  className={s.radio}
                  onChange={handleRadioChange}
                />
                <label htmlFor="easy" className={s.levelText}>
                  4X4
                </label>
              </li>
              <li className={s.level}>
                <input
                  id="hard"
                  name="levels"
                  type="radio"
                  className={s.radio}
                  onChange={handleRadioChange}
                />
                <label htmlFor="hard" className={s.levelText}>
                  6X6
                </label>
              </li>
              <li className={s.level}>
                <input
                  id="veryHard"
                  name="levels"
                  type="radio"
                  className={s.radio}
                  onChange={handleRadioChange}
                />
                <label htmlFor="veryHard" className={s.levelText}>
                  6X10
                </label>
              </li>
            </ul>
            <Button
              onClick={handlePlayClick}
              className={s.button}
              disabled={!selectedValue}>
              –ò–≥—Ä–∞—Ç—å
            </Button>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Main
